{"version":3,"file":"worker.js","sources":["../rs-utils/pkg/rs_utils.js","../worker.ts"],"sourcesContent":["let wasm;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_3.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n\nexport function init_rs() {\n    const ret = wasm.init_rs();\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n * @param {Uint8Array} data\n * @returns {EpubCtxt}\n */\nexport function load_epub(data) {\n    const ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.load_epub(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return EpubCtxt.__wrap(ret[0]);\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nexport function guess_mime_type(url) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.guess_mime_type(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\nconst EpubCtxtFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_epubctxt_free(ptr >>> 0, 1));\n\nexport class EpubCtxt {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(EpubCtxt.prototype);\n        obj.__wbg_ptr = ptr;\n        EpubCtxtFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        EpubCtxtFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_epubctxt_free(ptr, 0);\n    }\n    /**\n     * @returns {string}\n     */\n    metadata() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.epubctxt_metadata(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @param {string} path\n     * @returns {Uint8Array}\n     */\n    read_file(path) {\n        const ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.epubctxt_read_file(this.__wbg_ptr, ptr0, len0);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n}\nif (Symbol.dispose) EpubCtxt.prototype[Symbol.dispose] = EpubCtxt.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_Error_e17e777aac105295 = function(arg0, arg1) {\n        const ret = Error(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return ret;\n    };\n    imports.wbg.__wbg_newfromslice_074c56947bd43469 = function(arg0, arg1) {\n        const ret = new Uint8Array(getArrayU8FromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = arg1.stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_3;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('rs_utils_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","/// <reference lib=\"WebWorker\" />\nimport init, {\n  type EpubCtxt,\n  guess_mime_type,\n  init_rs,\n  load_epub\n} from \"rs-utils\";\n\nlet globalSelf = self as any as ServiceWorkerGlobalScope;\nlet currentEpub: EpubCtxt | undefined;\nlet currentScope: string | undefined;\n\nlet installChannel = new BroadcastChannel(\"install-channel\");\nlet logChannel = new BroadcastChannel(\"log-channel\");\nlet log = (...args: any[]) =>\n  logChannel.postMessage(args.map(arg => arg.toString()).join(\"\\t\"));\n\nglobalSelf.addEventListener(\"install\", async _event => {\n  log(\"Installed\");\n  await Promise.all([globalSelf.skipWaiting(), init()]);\n  init_rs();\n  log(\"Initialized\");\n  installChannel.postMessage(\"installed\");\n});\n\nglobalSelf.addEventListener(\"activate\", async _event => {\n  log(\"Activated\");\n  await globalSelf.clients.claim();\n  log(\"Claimed\");\n});\n\nglobalSelf.addEventListener(\"fetch\", event => {\n  if (!currentEpub) {\n    log(\"Ignoring request due to no loaded EPUB\");\n    return;\n  }\n  if (!currentScope) {\n    log(\"Ignoring request due to no current scope\");\n    return;\n  }\n\n  const EPUB_PATH = \"bene-reader/epub-content/\";\n  let epubBaseUrl = currentScope + EPUB_PATH;\n  if (event.request.url.startsWith(epubBaseUrl)) {\n    let path = event.request.url.slice(epubBaseUrl.length);\n    path = path.split(\"#\")[0];\n    let contents = currentEpub.read_file(path);\n    let mimeType = guess_mime_type(path);\n    event.respondWith(\n      new Response(contents, {\n        status: 200,\n        headers: {\n          \"Content-Type\": mimeType\n        }\n      })\n    );\n    log(\n      \"Handling request for\",\n      event.request.url,\n      \"with guessed type\",\n      mimeType\n    );\n  } else {\n    log(\"Ignoring request for\", event.request.url);\n  }\n});\n\nglobalSelf.addEventListener(\"message\", async event => {\n  let message = event.data;\n  if (message.type === \"new-epub\") {\n    let { data, scope, url, path } = message.data;\n    currentEpub = load_epub(data);\n    currentScope = scope;\n    let metadata = JSON.parse(currentEpub.metadata());\n    let clients = await globalSelf.clients.matchAll();\n    log(\"Loaded new epub, broadcasting to window\");\n    for (let client of clients) {\n      client.postMessage({\n        type: \"loaded-epub\",\n        data: {\n          metadata,\n          url,\n          path\n        }\n      });\n    }\n  }\n});\n"],"names":["ptr","init"],"mappings":"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"}